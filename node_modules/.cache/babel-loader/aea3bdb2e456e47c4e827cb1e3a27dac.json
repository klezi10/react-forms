{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Klizzy\\\\Desktop\\\\react-FORMS\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //can use useState to validate on each keystroke\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [name, setName] = useState(\"\"); // const [nameIsValid, setNameIsValid] = useState(false); removed using state for nameIsValid to make it a variable instead\n  //this way, one less state to manage\n\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const nameIsValid = name.trim() !== \"\"; //create a new variable containing 2 variables\n\n  const nameIsInvalid = !nameIsValid && nameIsTouched;\n\n  function handleChange(event) {\n    setName(event.target.value);\n  } //add onBlur (lost focus) to have a function on what to do when a user touches the form\n  //but doesn't enter anything, and clicks outside the form\n  //should give the invalid message\n\n\n  function nameInputBlurHandler() {\n    setNameIsTouched(true);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setNameIsTouched(true);\n\n    if (!nameIsValid) {\n      return;\n    }\n\n    console.log(name);\n    setName(\"\");\n  }\n\n  const nameInputClass = nameIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: handleChange,\n        value: name,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"pnbeCj67DvxCrixlyxsgMXdWrJM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","name","setName","nameIsTouched","setNameIsTouched","nameIsValid","trim","nameIsInvalid","handleChange","event","target","value","nameInputBlurHandler","handleSubmit","preventDefault","console","log","nameInputClass"],"sources":["C:/Users/Klizzy/Desktop/react-FORMS/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//can use useState to validate on each keystroke\r\n\r\nconst SimpleInput = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  // const [nameIsValid, setNameIsValid] = useState(false); removed using state for nameIsValid to make it a variable instead\r\n  //this way, one less state to manage\r\n  const [nameIsTouched, setNameIsTouched] = useState(false);\r\n\r\n  const nameIsValid = name.trim() !== \"\";\r\n  //create a new variable containing 2 variables\r\n  const nameIsInvalid = !nameIsValid && nameIsTouched;\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  //add onBlur (lost focus) to have a function on what to do when a user touches the form\r\n  //but doesn't enter anything, and clicks outside the form\r\n  //should give the invalid message\r\n\r\n  function nameInputBlurHandler() {\r\n    setNameIsTouched(true);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setNameIsTouched(true);\r\n\r\n    if (!nameIsValid) {\r\n      return;\r\n    }\r\n    console.log(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  const nameInputClass = nameIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={nameInputClass}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          onBlur={nameInputBlurHandler}\r\n        />\r\n        {nameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CAD6B,CAE7B;EACA;;EACA,MAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;EAEA,MAAMO,WAAW,GAAGJ,IAAI,CAACK,IAAL,OAAgB,EAApC,CAN6B,CAO7B;;EACA,MAAMC,aAAa,GAAG,CAACF,WAAD,IAAgBF,aAAtC;;EAEA,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BP,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;EACD,CAZ4B,CAc7B;EACA;EACA;;;EAEA,SAASC,oBAAT,GAAgC;IAC9BR,gBAAgB,CAAC,IAAD,CAAhB;EACD;;EAED,SAASS,YAAT,CAAsBJ,KAAtB,EAA6B;IAC3BA,KAAK,CAACK,cAAN;IACAV,gBAAgB,CAAC,IAAD,CAAhB;;IAEA,IAAI,CAACC,WAAL,EAAkB;MAChB;IACD;;IACDU,OAAO,CAACC,GAAR,CAAYf,IAAZ;IACAC,OAAO,CAAC,EAAD,CAAP;EACD;;EAED,MAAMe,cAAc,GAAGV,aAAa,GAChC,sBADgC,GAEhC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,YAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,cAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAET,YAHZ;QAIE,KAAK,EAAEP,IAJT;QAKE,MAAM,EAAEW;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,EASGL,aAAa,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATpB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAvDD;;GAAMR,W;;KAAAA,W;AAyDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}