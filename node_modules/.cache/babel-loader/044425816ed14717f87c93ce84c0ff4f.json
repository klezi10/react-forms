{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Klizzy\\\\Desktop\\\\react-FORMS\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n  const nameIsValid = name.trim() !== \"\";\n  const nameIsInvalid = !nameIsValid && nameIsTouched;\n  const emailIsValid = email.trim() !== \"\";\n  const emailIsInvalid = !emailIsValid && emailIsTouched;\n  let formIsValid = false;\n\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n    setEmail(event.target.value);\n  } // function handleEmailChange(event) {\n  //   setEmail(event.target.value);\n  // }\n\n\n  function nameInputBlurHandler() {\n    setNameIsTouched(true);\n  }\n\n  function emailInputBlurHandler() {\n    setEmailIsTouched(true);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setNameIsTouched(true);\n    setEmailIsTouched(true);\n\n    if (!nameIsValid || !emailIsValid) {\n      return;\n    }\n\n    console.log(name, email);\n    setName(\"\");\n    setEmail(\"\");\n    setNameIsTouched(false);\n    setEmailIsTouched(false);\n  }\n\n  const nameInputClass = nameIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClass = emailIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: handleNameChange,\n        value: name,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: handleNameChange,\n        value: email,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), emailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"h+dbnhPoWXjJuPrYmtBxeYXB2YQ=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","name","setName","nameIsTouched","setNameIsTouched","email","setEmail","emailIsTouched","setEmailIsTouched","nameIsValid","trim","nameIsInvalid","emailIsValid","emailIsInvalid","formIsValid","handleNameChange","event","target","value","nameInputBlurHandler","emailInputBlurHandler","handleSubmit","preventDefault","console","log","nameInputClass","emailInputClass"],"sources":["C:/Users/Klizzy/Desktop/react-FORMS/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [nameIsTouched, setNameIsTouched] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\r\n\r\n  const nameIsValid = name.trim() !== \"\";\r\n  const nameIsInvalid = !nameIsValid && nameIsTouched;\r\n\r\n  const emailIsValid = email.trim() !== \"\";\r\n  const emailIsInvalid = !emailIsValid && emailIsTouched;\r\n\r\n  let formIsValid = false;\r\n\r\n  if (nameIsValid && emailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n    setEmail(event.target.value)\r\n  }\r\n\r\n  // function handleEmailChange(event) {\r\n  //   setEmail(event.target.value);\r\n  // }\r\n\r\n  function nameInputBlurHandler() {\r\n    setNameIsTouched(true);\r\n  }\r\n\r\n  function emailInputBlurHandler() {\r\n    setEmailIsTouched(true);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setNameIsTouched(true);\r\n    setEmailIsTouched(true);\r\n\r\n    if (!nameIsValid || !emailIsValid) {\r\n      return;\r\n    }\r\n\r\n    console.log(name, email);\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setNameIsTouched(false);\r\n    setEmailIsTouched(false);\r\n  }\r\n\r\n  const nameInputClass = nameIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const emailInputClass = emailIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={nameInputClass}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={handleNameChange}\r\n          value={name}\r\n          onBlur={nameInputBlurHandler}\r\n        />\r\n        {nameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n      </div>\r\n      <div className={emailInputClass}>\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          onChange={handleNameChange}\r\n          value={email}\r\n          onBlur={emailInputBlurHandler}\r\n        />\r\n        {emailIsInvalid && (\r\n          <p className=\"error-text\">Email must not be empty.</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button type=\"submit\" disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}